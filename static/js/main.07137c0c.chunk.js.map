{"version":3,"sources":["components/Pagination.js","components/App.js","index.js"],"names":["Pagination","data","pageLimit","dataLimit","totalPages","currentPage","setCurrentPage","changePage","e","pageNum","Number","target","textContent","length","className","startIndex","endIndex","slice","getPaginatedData","map","user","src","avatar_url","alt","href","html_url","login","id","onClick","start","Math","floor","Array","fill","_","index","getGroupPages","page","App","useState","setData","ceil","useEffect","fetch","then","response","json","resJson","ReactDOM","render","document","getElementById"],"mappings":"wKA2EeA,EAzEI,SAAC,GAA2E,IAA1EC,EAAyE,EAAzEA,KAAMC,EAAmE,EAAnEA,UAAWC,EAAwD,EAAxDA,UAAWC,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,eAqBhEC,EAAa,SAAAC,GACf,IAAMC,EAAUC,OAAOF,EAAEG,OAAOC,aAChCN,EAAeG,IAmBnB,OAAGR,EAAKY,OAAS,EAET,qCACI,8CACA,qBAAKC,UAAU,iBAAf,SAnBa,WACrB,IAAMC,GAAcV,EAAc,GAAKF,EACjCa,EAAWD,EAAaZ,EAC9B,OAAOF,EAAKgB,MAAMF,EAAYC,GAiBjBE,GAAmBC,KAAI,SAAAC,GACpB,OAAO,sBAAKN,UAAU,OAAf,UACP,qBAAKO,IAAKD,EAAKE,WAAYC,IAAI,kBAC/B,6BAAI,mBAAGC,KAAMJ,EAAKK,SAAd,SAAyBL,EAAKM,YAFAN,EAAKO,SAM/C,sBAAKb,UAAU,qBAAf,UACI,wBAAQA,UAAS,UAAmB,IAAdT,EAAkB,WAAa,WAAauB,QA3C7D,WACjB,GAAmB,IAAhBvB,EACC,OAAOA,EAEPC,EAAeD,EAAc,IAuCrB,sBArBM,WAClB,IAAMwB,EAAQC,KAAKC,OAAO1B,EAAc,GAAKH,GAAaA,EAC1D,OAAG2B,EAAQ3B,EAAYE,EACZ,IAAI4B,MAAM9B,GAAW+B,OAAOd,KAAI,SAACe,EAAGC,GAAJ,OAAcN,EAAQM,EAAQ,KAEjE,IAAIH,MAAM5B,EAAayB,GAAOI,OAAOd,KAAI,SAACe,EAAGC,GAAJ,OAAcN,EAAQM,EAAQ,KAiBlEC,GAAgBjB,KAAI,SAACkB,EAAMF,GACxB,OAAO,wBAAoBP,QAASrB,EAAYO,UAAS,UAAKT,IAAcgC,EAAO,SAAU,WAAtF,SAAoGA,GAAvFF,MAExB,wBAAQrB,UAAS,UAAKT,IAAcD,EAAa,WAAa,WAAawB,QAxDtE,WACjB,GAAGvB,IAAgBD,EACf,OAAOC,EAENC,EAAeD,EAAc,IAoDtB,wBAOZ,qCACI,8CACA,qDCpDGiC,EAdH,WACR,MAAwBC,mBAAS,IAAjC,mBAAOtC,EAAP,KAAauC,EAAb,KACA,EAAsCD,mBAAS,GAA/C,mBAAOlC,EAAP,KAAoBC,EAApB,KAGMF,EAAa0B,KAAKW,KAAKxC,EAAKY,OADhB,GAOlB,OAJA6B,qBAAU,WACNC,MATE,6CASSC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAO,OAAIP,EAAQO,QACtE,IAEI,cAAC,EAAD,CAAY9C,KAAMA,EAAMI,YAAaA,EAAaC,eAAgBA,EAAgBJ,UARvE,EAQ6FC,UAP7F,EAOmHC,WAAYA,KCVrJ4C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.07137c0c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Pagination = ({data, pageLimit, dataLimit, totalPages, currentPage, setCurrentPage}) => {\n\n    //Click button to go to next page\n    const goToNextPage = () => {\n        if(currentPage === totalPages){\n            return currentPage\n        }else {\n             setCurrentPage(currentPage + 1)\n        }\n    }\n\n    //Click button to go to previous page\n    const goToPrevPage = () => {\n        if(currentPage === 1 ){\n            return currentPage\n        }else {\n            setCurrentPage(currentPage - 1)\n        }\n    }\n\n    //change page when clicked\n    const changePage = e =>{\n        const pageNum = Number(e.target.textContent)\n        setCurrentPage(pageNum)\n    }\n\n    //get data for each page\n    const getPaginatedData = () => {\n        const startIndex = (currentPage - 1) * dataLimit\n        const endIndex = startIndex + dataLimit\n        return data.slice(startIndex, endIndex)\n    }\n\n    //get page groups to be shown\n    const getGroupPages = () =>{\n        const start = Math.floor((currentPage - 1) / pageLimit) * pageLimit\n        if(start + pageLimit < totalPages){\n            return new Array(pageLimit).fill().map((_, index) => start + index + 1)\n        }\n        return  new Array(totalPages - start).fill().map((_, index) => start + index + 1)  \n    }\n\n    if(data.length > 0){\n        return (\n            <>\n                <h1>Github Users</h1>\n                <div className='user-container'> \n                    {getPaginatedData().map(user => {\n                        return <div className='user' key={user.id}>\n                        <img src={user.avatar_url} alt='not available' />\n                        <h4><a href={user.html_url}>{user.login}</a></h4>\n                    </div>\n                })}\n                </div>\n                <div className='page-btn-container'>\n                    <button className={`${currentPage===1 ? 'disabled' : 'default'}`} onClick={goToPrevPage}>Previous</button>\n                    {getGroupPages().map((page, index) => {\n                        return <button key={index} onClick={changePage} className={`${currentPage===page ? 'active': 'default'}`}>{page}</button>\n                    })}\n                    <button className={`${currentPage===totalPages ? 'disabled' : 'default'}`} onClick={goToNextPage}>Next</button>\n                </div>\n            </>\n        )\n    }\n\n    return (\n        <>\n            <h1>Github Users</h1>\n            <h2>Loading Data...</h2>\n        </>\n    )\n}\n\nexport default Pagination\n","import {useState, useEffect} from 'react'\nimport Pagination from './Pagination'\n\nconst url='https://api.github.com/users?per_page=100'\nconst App = () => {\n    const [data, setData] = useState([])\n    const [currentPage, setCurrentPage] = useState(1)\n    const pageLimit = 5\n    const dataLimit = 9\n    const totalPages = Math.ceil(data.length / dataLimit)\n\n    useEffect(() => {\n        fetch(url).then(response => response.json()).then(resJson => setData(resJson))\n    }, [])\n\n    return <Pagination data={data} currentPage={currentPage} setCurrentPage={setCurrentPage} pageLimit={pageLimit} dataLimit={dataLimit} totalPages={totalPages}/>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}